
# ecmaspeak-py/one_line_alg.grammar:
# A grammar for one-line algorithms
#
# Copyright (C) 2019  J. Michael Dyck <jmdyck@ibiblio.org>

{START} :
    {ONE_LINE_ALG}{_eos_}

{ONE_LINE_ALG} :
    {nlai}{COMMAND}{nlai}

{COMMAND} :
    If {CONDITION}, return {LITERAL}. If {CONDITION}, return {LITERAL}.
    If {CONDITION}, return {LITERAL}; otherwise return {LITERAL}.
    Return {EXPR} (no conversion).
    Return {EXPR}.
    See grammar and conversion algorithm below.
    Throw a {ERROR_TYPE} exception.

{CONDITION} :
    {var} is the empty String (its length is zero)
    {var} is {LITERAL}
    {var} is {LITERAL}, {LITERAL}, or {LITERAL}

{EXPR} :
    a new {cap_word} object whose {dsb_word} internal slot is set to {var}. See {h_emu_xref} for a description of {cap_word} objects
    {LITERAL}
    {PP_NAMED_OPERATION_INVOCATION}
    {var}

{PP_NAMED_OPERATION_INVOCATION} :
    ! {NAMED_OPERATION_INVOCATION}

{NAMED_OPERATION_INVOCATION} :
    {PREFIX_PAREN}

{PREFIX_PAREN} :
    {OPN_BEFORE_PAREN}({EXLIST_OPT})

{OPN_BEFORE_PAREN} :
    {NUMERIC_TYPE_INDICATOR}::{low_word}

{NUMERIC_TYPE_INDICATOR} :
    BigInt
    Number

{EXLIST_OPT} :
    {var}

{LITERAL} :
    *false*
    *true*
    {NUM_LITERAL}
    {STR_LITERAL}

{NUM_LITERAL} :
    {starred_int_lit}{h_sub_fancy_f}
    {starred_int_lit}{h_sub_fancy_z}
    {starred_nan_lit}

{STR_LITERAL} :
    {starred_str}

{ERROR_TYPE} :
    *TypeError*
